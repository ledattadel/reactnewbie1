{"version":3,"sources":["logo.svg","components/Form.js","components/Todo.js","components/Todolist.js","App.js","reportWebVitals.js","index.js"],"names":["Form","inputText","setInputText","todos","setTodos","setStatus","onChange","e","target","value","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","Todolist","class","App","useState","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAAe,I,kBCgCAA,EA7BF,SAAC,GAAsD,IAArDC,EAAoD,EAApDA,UAAUC,EAA0C,EAA1CA,aAAaC,EAA6B,EAA7BA,MAAMC,EAAuB,EAAvBA,SAASC,EAAc,EAAdA,UAajD,OACI,iCACA,uBAAOC,SAda,SAACC,GAErBL,EAAaK,EAAEC,OAAOC,QAYYA,MAAOR,EAAWS,KAAK,OAAOC,UAAU,eAC1E,wBAAQC,QAXa,SAACL,GACtBA,EAAEM,iBACFT,EAAS,GAAD,mBAAKD,GAAL,CAAW,CAACW,KAAMb,EAAUc,WAAW,EAAOC,GAAkB,IAAdC,KAAKC,aAC/DhB,EAAa,KAQsBS,UAAU,cAAcD,KAAK,SAAhE,SACE,mBAAGC,UAAU,yBAEf,qBAAKA,UAAU,SAAf,SACE,yBAAQL,SAVQ,SAACC,GACnBF,EAAUE,EAAEC,OAAOC,QASgBU,KAAK,QAAQR,UAAU,cAAxD,UACE,wBAAQF,MAAM,MAAd,iBACA,wBAAQA,MAAM,YAAd,uBACA,wBAAQA,MAAM,cAAd,kC,OCKGW,EA7BF,SAAC,GAA8B,IAA7BN,EAA4B,EAA5BA,KAAKO,EAAuB,EAAvBA,KAAKlB,EAAkB,EAAlBA,MAAMC,EAAY,EAAZA,SAe3B,OACI,sBAAKO,UAAU,OAAf,UACI,oBAAIA,UAAS,oBAAeU,EAAKN,UAAY,YAAc,IAA3D,SAAmED,IAC/D,wBAAQF,QAdI,WACpBR,EAASD,EAAMmB,KAAI,SAAAC,GACf,OAAGA,EAAKP,KAAOK,EAAKL,GAChB,2BACOO,GADP,IACYR,WAAYQ,EAAKR,YAI1BQ,OAM8BZ,UAAU,eAA3C,SACI,mBAAGA,UAAU,mBAEjB,wBAAQC,QApBE,WAClBR,EAASD,EAAMqB,QAAO,SAAAC,GAAE,OAAGA,EAAGT,KAAOK,EAAKL,QAmBFL,UAAU,YAA1C,SACI,mBAAGA,UAAU,uBCDlBe,EApBE,SAAC,GAAsB,IAArBvB,EAAoB,EAApBA,MAAMC,EAAc,EAAdA,SAErB,OACI,qBAAKuB,MAAM,iBAAX,SACA,oBAAIA,MAAM,YAAV,SACKxB,EAAMmB,KAAI,SAACD,GAAD,OACP,cAAC,EAAD,CAEQjB,SAAUA,EACVD,MAAOA,EACPkB,KAAMA,EACNP,KAAMO,EAAKP,MACNO,EAAKL,YCiBnBY,MA1Bf,WAAgB,IAAD,EACoBC,mBAAS,IAD7B,mBACN5B,EADM,KACIC,EADJ,OAEY2B,mBAAS,IAFrB,mBAEN1B,EAFM,KAEAC,EAFA,OAGcyB,mBAAS,OAHvB,mBAGCxB,GAHD,aAI0BwB,mBAAS,IAJnC,mBAeb,OAfa,UAgBX,sBAAKlB,UAAU,MAAf,UACE,iCACA,mDAEF,cAAC,EAAD,CAAMV,UAAWA,EAAWE,MAAOA,EAAOC,SAAUA,EAAUF,aAAcA,EAAcG,UAAWA,IACrG,cAAC,EAAD,CAAUD,SAAUA,EAASD,MAAOA,QCfzB2B,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCAdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.0c632982.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport '../../src/App.css'\r\n\r\nconst Form = ({inputText,setInputText,todos,setTodos,setStatus}) =>{\r\n    const inputTextHander = (e) =>{\r\n        \r\n        setInputText(e.target.value);\r\n    }\r\n    const submitTodoHandle = (e) =>{\r\n        e.preventDefault();\r\n        setTodos([...todos,{text :inputText,completed: false, id: Math.random()*1000}]);\r\n        setInputText(\"\");\r\n    }\r\n    const statusHandler = (e) =>{\r\n        setStatus(e.target.value);\r\n    }\r\n    return(\r\n        <form>\r\n        <input onChange={inputTextHander} value={inputText} type=\"text\" className=\"todo-input\" />\r\n        <button onClick={submitTodoHandle} className=\"todo-button\" type=\"submit\">\r\n          <i className=\"fas fa-plus-square\"></i>\r\n        </button>\r\n        <div className=\"select\">\r\n          <select onChange={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n            <option value=\"all\">All</option>\r\n            <option value=\"completed\">Completed</option>\r\n            <option value=\"uncompleted\">Uncompleted</option>\r\n          </select>\r\n        </div>\r\n      </form>\r\n    );\r\n}\r\nexport default Form;","import React from 'react';\r\n\r\nconst Todo = ({text,todo,todos,setTodos})=>{\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter(el=> el.id !== todo.id))\r\n    }\r\n    const completeHandler = () =>{\r\n        setTodos(todos.map(item=>{\r\n            if(item.id === todo.id){\r\n                return{\r\n                    ...item,completed: !item.completed\r\n                }\r\n                \r\n            }\r\n            return item;\r\n        }))\r\n    }\r\n    return(\r\n        <div className=\"todo\">\r\n            <li className={`todo-item ${todo.completed ? \"completed\" : \"\"}`} >{text}</li>\r\n                <button onClick={completeHandler}className=\"complete-btn\">\r\n                    <i className=\"fas fa-check\"></i>\r\n                </button>\r\n                <button onClick={deleteHandler} className=\"trash-btn\">\r\n                    <i className=\"fas fa-trash\"></i>\r\n                </button>\r\n           \r\n        </div>\r\n\r\n    );\r\n}\r\nexport default Todo;","import React from 'react';\r\nimport Todo from './Todo';\r\n\r\nconst Todolist = ({todos,setTodos}) => {\r\n    // const [todos,setTodos] = useState([]);\r\n    return(\r\n        <div class=\"todo-container\">\r\n        <ul class=\"todo-list\">\r\n            {todos.map((todo)=>(\r\n                <Todo \r\n                        \r\n                        setTodos={setTodos}\r\n                        todos={todos}\r\n                        todo={todo}\r\n                        text={todo.text}\r\n                        key={todo.id}\r\n                        // access the each one\r\n                        ></Todo>\r\n            ))}\r\n        </ul>\r\n        </div>\r\n    );\r\n}\r\nexport default Todolist;","import React, { useState } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Form from './components/Form'\nimport Todolist from './components/Todolist'\n\nfunction App() {\n  const [inputText,setInputText] = useState(\"\");\n  const [todos,setTodos] = useState([]);\n  const [status,setStatus] = useState(\"all\");\n  const [filteredTodos,setFilterTodos] = useState([]);\n\n  const filterHandler = () => {\n    switch(status){\n      case 'completed': setFilterTodos(todos.filter(todo=>todo.completed === true));\n      break;\n      case 'uncompleted':setFilterTodos(todos.filter(todo=>todo.completed === false));\n      break;\n      default:setFilterTodos(todos);break;\n    }\n  }\n  return ( \n    <div className=\"App\">\n      <header>\n      <h1>Dat's Todo List</h1>\n    </header>\n    <Form inputText={inputText} todos={todos} setTodos={setTodos} setInputText={setInputText} setStatus={setStatus}></Form>\n    <Todolist setTodos={setTodos}todos={todos} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}